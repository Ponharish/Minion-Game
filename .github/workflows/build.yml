name: Cross-platform Build with PyInstaller

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
    - name: Checkout source code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller

    - name: Build executable
      shell: bash
      run: |
        SEP=":"
        if [[ '${{ runner.os }}' == 'Windows' ]]; then
          SEP=";"
        fi

        pyinstaller --onefile --windowed "miniongame.py" \
          --add-data "1.png${SEP}." \
          --add-data "2.png${SEP}." \
          --add-data "3.png${SEP}." \
          --add-data "4.png${SEP}." \
          --add-data "5.png${SEP}." \
          --add-data "6.png${SEP}." \
          --add-data "7.png${SEP}." \
          --add-data "help_icon.png${SEP}." \
          --add-data "Bananasong.mp3${SEP}."

    - name: Rename output (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        Move-Item "dist\miniongame.exe" "dist\app-windows.exe"

    - name: Rename output (Linux/macOS)
      if: matrix.os != 'windows-latest'
      run: |
        mv "dist/miniongame" "dist/app-${{ matrix.os }}"

    - name: Upload executable artifact
      uses: actions/upload-artifact@v4
      with:
        name: Minion Game-${{ matrix.os }}
        path: dist/
